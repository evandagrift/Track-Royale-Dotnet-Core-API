{"version":3,"sources":["cssModules/Battle.module.css","cssModules/Deck.module.css","cssModules/HomePage.module.css","cssModules/ChestCollection.module.css","cssModules/Card.module.css","cssModules/BattleCollection.module.css","cssModules/Chest.module.css","cssModules/ClanPlayer.module.css","logo.svg","UserContext.js","components/Navbar.js","axios.js","components/PasswordInputFormControls.js","Pages/RegisterPage.js","components/Card.js","components/Deck.js","Utilities/scripts.js","components/Time.js","components/Battle.js","Utilities/axios-functions.js","components/BattleCollection.js","components/SearchBoxSelector.js","components/SearchBox.js","components/Chest.js","components/ChestCollection.js","Pages/HomePage.js","Pages/UserSettingsPage copy.js","components/Player.js","Pages/PlayerPage.js","Pages/LoginPage.js","components/ClanPlayer.js","components/ClanPlayerCollection.js","components/Clan.js","Pages/ClanPage.js","Pages/ContactPage.js","Pages/EmailVerificationPage.js","Pages/ForgotPasswordPage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","UserContext","createContext","MyNavbar","useContext","user","setUser","loggedOutNav","Navbar","bg","variant","expand","sticky","className","to","Toggle","aria-controls","Collapse","id","Nav","currentNav","headers","localStorage","Authorization","axios","Axios","create","baseURL","PasswordInputFormControls","props","state","passwordElements","type","placeholder","onChange","this","passwordChangeValue","password2ChangeValue","Component","RegisterPage","useState","userName","setUserName","email","setEmail","password","setPassword","setPassword2","tag","setTag","registered","setRegistered","invalidCredentials","setInvalidCredentials","makePostRequest","e","post","Username","Password","Email","Tag","then","response","status","error","console","log","usernameEmailElements","target","value","required","userTagElement","loginButton","onClick","resendVerificationLink","draw","Card","card","styles","src","Url","Id","Deck","deck","row","Card1","Card1Id","Card2","Card2Id","Card3","Card3Id","Card4","Card4Id","Card5","Card5Id","Card6","Card6Id","Card7","Card7Id","Card8","Card8Id","FormatTag","tagFormat","formattedTag","substring","toUpperCase","ConvertTimer","dateTime","length","year","month","day","hours","minutes","seconds","convertedDate","Date","returnString","toDateString","toTimeString","RequestResetPasswordPostAsync","userEmail","a","data","ResetPasswordPostAsync","passwordResetCode","Time","time","Battle","battle","Team1DeckBId","Team1DeckAId","team1Result","team2Result","Team1Crowns","Team2Crowns","leftPanel","Team1Name","Team1StartingTrophies","Team1TrophyChange","Team1DeckA","centerPanel","BattleTime","rightPanel","Team2Name","Team2StartingTrophies","Team2TrophyChange","Team2DeckA","LoginFunctionAsync","username","undefined","GetBattlesAsync","get","GetClanAsync","searchTag","GetPlayerBattlesAsync","playerTag","responseBattles","GetChestsAsync","getPlayerDataAsync","BattleCollection","battles","fetchedBattles","setState","componentHeader","battlesDraw","map","b","i","battleCollection","SearchBoxSelector","searching","playerClass","clanClass","searchSelect","playerSearchSelect","clanSearchSelect","SearchBox","searchInput","validTag","searchPlaceholder","redirect","searchGroup","onSubmit","search","push","Chest","chest","Name","Index","ChestCollection","chestCollection","chests","header","c","collection","chestbox","HomePage","upcomingChests","drawBattles","searchBox","greeting","backgroundImage","UserSettingsPage","role","setRole","clanTag","setClanTag","preventDefault","config","put","Token","ClanTag","Role","Player","player","responsePlayer","ExpLevel","Clan","LastSeen","Trophies","BestTrophies","Wins","Losses","ThreeCrownWins","StarPoints","CardsDiscovered","BattleCount","Donations","DonationsReceived","TotalDonations","ClanCardsCollected","WarDayWins","PlayerPage","useParams","useEffect","LoginPage","name","setName","login","setPlayer","stayLogged","document","getElementById","checked","tempUser","setItem","JSON","stringify","href","ClanPlayer","clanPlayer","clickableRow","handleClick","bind","scope","ClanPlayerCollection","clanPlayerCollection","clan","clanDraw","membersDraw","Members","Description","RequiredTrophies","DonationsPerWeek","ClanWarTrophies","ClanChestLevel","ClanChestStatus","Type","LocationCode","BadgeId","ClanScore","MemberList","ClanPage","setRedirect","ContactPage","EmailVerificationPage","verificationCode","verificationSent","setVerificationSent","authenticate","codeToSend","ForgotPasswordPage","password2","emailSent","setEmailSent","setPasswordReset","requestPasswordReset","sendPasswordReset","fetchedUser","passwordsForm","notMatchDraw","redirectElement","App","getItem","parse","Provider","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ce2da923.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"battle\":\"Battle_battle__clVek\",\"leftPanel\":\"Battle_leftPanel__1ClR2\",\"centerPanel\":\"Battle_centerPanel__Oikhg\",\"rightPanel\":\"Battle_rightPanel__1YFbS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deck\":\"Deck_deck__25ES_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backgroundImage\":\"HomePage_backgroundImage__3jFDY\",\"greeting\":\"HomePage_greeting__3joI1\",\"chestCollection\":\"HomePage_chestCollection__3V6E6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"collection\":\"ChestCollection_collection__wWgeK\",\"chestbox\":\"ChestCollection_chestbox__3A-EW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__ix-8N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"battleCollection\":\"BattleCollection_battleCollection__pTTfV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chest\":\"Chest_chest__1-tD2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clickableRow\":\"ClanPlayer_clickableRow__1M51f\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {createContext} from 'react';\n\nexport const UserContext = createContext(\"default\");","import React, {useState, useContext} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { UserContext } from \"../UserContext\";\n\nimport { Navbar,Nav,NavDropdown,Form,FormControl,Button } from 'react-bootstrap'; \n\nconst MyNavbar = () => {\n\nconst { user, setUser} = useContext(UserContext);\n\nlet navBar = '';\nif(user != null)\n{\n  navBar = (\n    <ul class=\"navbar-nav\">\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/clan\">Clan</Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/player\">Player</Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/settings\">User Settings</Link>\n        </li>\n      </ul>\n  )\n}\nelse{\nnavBar = (\n  <ul class=\"navbar-nav\">\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/login\">login</Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/register\">signup</Link>\n        </li>\n      </ul>\n)\n}\n\n\n\n\n\n\n\n\n\n\nlet loggedOutNav = (<div>\n  <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\" className=\"p-2\">\n  <Link to=\"/\" className=\"navbar-brand\">Codex Royale</Link>\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n<Navbar.Collapse id=\"basic-navbar-nav\"className=\"justify-content-end\">\n<Nav className=\"mr-auto\">\n<Link to=\"/Login\" className=\"nav-link\">Login</Link>\n<Link to=\"/Register\" className=\"nav-link\">Register</Link>\n<Link to=\"/Contact\" className=\"nav-link\">Contact</Link>\n</Nav></Navbar.Collapse>\n</Navbar>\n</div>);\n\nlet currentNav = '';\n\nif(user != null){\n  \n    currentNav = (<div>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\" className=\"p-2\">\n      <Link to=\"/\" className=\"navbar-brand\">Codex Royale</Link>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\"className=\"justify-content-start\">\n    <Nav className=\"mr-auto\">\n    <Link to=\"/Player\" className=\"nav-link\">Player</Link>\n    <Link to=\"/Clan\" className=\"nav-link\">Clan</Link>\n    </Nav></Navbar.Collapse>\n  <Navbar.Collapse id=\"basic-navbar-nav\"className=\"justify-content-end\">\n    <Nav className=\"mr-auto\">\n    <Link to=\"/Settings\" className=\"nav-link\">Settings</Link>\n    <Link to=\"/Contact\" className=\"nav-link\">Contact</Link>\n    </Nav></Navbar.Collapse>\n    </Navbar>\n    </div>);\n}\nelse{\n  currentNav = loggedOutNav;\n\n}\n\n\nreturn(<div>\n{currentNav}\n</div>\n  \n);\n\n};\n\nexport default MyNavbar;","import Axios from \"axios\";\nconst baseURL = \"https://www.royaletracker.com/api/\";\nconst localURL = \"//localhost:52003/api/\"\nlet headers = {};\nif (localStorage.user){\n   headers.Authorization = `bearer ${localStorage.user['token']}`;\n}\nexport const axios = Axios.create({baseURL:baseURL,\nheaders,\n});\n","import React, {Component } from 'react';\n\nclass PasswordInputFormControls extends Component{\n  constructor(props){\n    super(props);\n    this.state = {};\n  } \n\n  render () {\n    let passwordElements = (\n        <div className=\"card p-2\">\n          <label><b>Password</b>\n          <input type=\"password\" id=\"inputPassword\" className=\"form-control\" placeholder=\"Password\"\n            onChange={this.props.passwordChangeValue} />\n          </label>\n    \n          <label><b>Re-Enter Password</b>\n          <input type=\"password\" id=\"inputPassword\" className=\"form-control\" placeholder=\"Password\"\n            onChange={this.props.password2ChangeValue} />\n          </label>\n        </div>\n      );\n\n//     if(this.state.dropDownToggle == false) { draw = (<button onClick={this.handleClick}>reset password</button>);\n//  }\n//     else {\n//         draw = passwordElements;\n//     }\n    return (\n       <div>{passwordElements}</div>\n    );\n  }\n\n}\nexport default PasswordInputFormControls;  ","import React, { useState, useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { UserContext } from \"../UserContext\";\nimport { axios } from \"../axios\";\nimport PasswordInputFormControls from \"../components/PasswordInputFormControls\"\n\nconst RegisterPage = () => {\n  //useState returns an array, we destructure it into a variable and function\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [tag, setTag] = useState(\"\");\n\n  const [registered, setRegistered] = useState(false);\n  const [invalidCredentials, setInvalidCredentials] = useState();\n\n  const { user, setUser } = useContext(UserContext);\n\n  const makePostRequest = (e) => {\n\n      axios\n        .post(\"Users/signup\", {\n          Username: userName,\n          Password: password,\n          Email: email,\n          Tag: tag,\n        })\n        .then(\n          (response) => {\n            if (response.status == false) {\n                setInvalidCredentials(true);\n            } else {\n                setRegistered(true);\n            }\n          },\n          (error) => {\n            console.log(error);\n          }\n        );\n    \n  };\n\n  const checkFields = () => {\n    return true;\n  };\n  let usernameEmailElements = (\n    <div>\n      <span>\n        <b>Username</b>\n      </span>\n      <input\n        type=\"username\"\n        id=\"inputUsername\"\n        className=\"form-control\"\n        placeholder=\"Username\"\n        onChange={(e) => setUserName(e.target.value)}\n        required\n      />\n\n      <span>\n        <b>Email</b>\n      </span>\n      <input\n        type=\"email\"\n        id=\"inputEmail\"\n        className=\"form-control\"\n        placeholder=\"Email\"\n        onChange={(e) => setEmail(e.target.value)}\n        required\n      />\n    </div>\n  );\n\n  let userTagElement = (\n    <div>\n      <span>\n        <b>Clash Royale Tag</b>\n      </span>\n      <input\n        id=\"inputTag\"\n        className=\"form-control\"\n        placeholder=\"#3x4mp13\"\n        onChange={(e) => setTag(e.target.value)}\n        required\n      />\n    </div>\n  );\n\n  let loginButton = (\n    <button className=\"w-100 btn btn-lg btn-primary m-1\" onClick={makePostRequest}>\n      Register\n    </button>\n  );  \n  let resendVerificationLink = (\n    <button className=\"w-60 btn btn-sm btn-primary m-1\" onClick={makePostRequest}>\n     Resend Verification Link\n    </button>\n  );\n\n\n  let invalidCredentialsElement = ''\n  if(invalidCredentials){\n    invalidCredentialsElement = (<p className=\"warning-text\">Username Or Email is already in use</p>);\n  }\n  else invalidCredentialsElement = '';\n\nlet draw = '';\n\n\nconst handlePasswordChangeValue = e => setPassword(e.target.value);\nconst handlePassword2ChangeValue = e =>  setPassword2(e.target.value);\n\nif(registered == false)\n{\ndraw = (<div><h1 className=\"h3 mb-3 fw-normal\">Please Register</h1>\n{usernameEmailElements}\n<PasswordInputFormControls passwordChangeValue={handlePasswordChangeValue} password2ChangeValue={handlePassword2ChangeValue}/>\n{userTagElement}\n{loginButton}</div>);\n}\nelse draw = (<div>\n  <p>Check your email for your verifcation link</p>\n<div>{resendVerificationLink}</div>\n</div>);\n\n  return (\n    <div>\n      {draw}\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","import React, { Component } from 'react';\nimport styles from \"../cssModules/Card.module.css\";\n\nclass Card extends Component{\n  constructor(props){\n    super(props);\n  } \n  render () {\n          \n    const { card } = this.props;\n\n    if(card) return (<div className={styles.card}><img key={\"$id-\"+card.Id} src={card.Url}/></div>);\n    \n    else return (<div/>);\n  }\n\n}\nexport default Card;  ","import React, { Component} from \"react\";\nimport Card from \"../components/Card\";\nimport styles from \"../cssModules/Deck.module.css\"\n\nclass Deck extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { deck } = this.props;\n    if(deck)\n    {\n return (\n        <div className={styles.deck}>\n          <div className={styles.row}>\n            <Card key={\"$id\" + deck.Card1Id} card={deck.Card1} />\n            <Card key={\"$id\" + deck.Card2Id} card={deck.Card2} />\n            <Card key={\"$id\" + deck.Card3Id} card={deck.Card3} />\n            <Card key={\"$id\" + deck.Card4Id} card={deck.Card4} />\n          </div>\n\n          <div className={styles.row}>\n            <Card key={\"$id\" + deck.Card5Id} card={deck.Card5} />\n            <Card key={\"$id\" + deck.Card6Id} card={deck.Card6} />\n            <Card key={\"$id\" + deck.Card7Id} card={deck.Card7} />\n            <Card key={\"$id\" + deck.Card8Id} card={deck.Card8} />\n          </div>\n        </div>\n      );\n    }\n    else return (<div></div>);\n  \n  }\n    \n}\n\n\nexport default Deck;\n\n/*\nsome old code\n\n\n\n    if(!deck.Card1) {return (<div>loading</div>)}\n      else return(<div className=\"deck\">\n        <div className=\"d-inline-flex m-0\">\n        <Card  key={'$id'+deck.Card1.Id} card={deck.Card1} />\n        <Card key={'$id'+deck.Card2.Id} card={deck.Card2} />\n        <Card  key={'$id'+deck.Card3.Id} card={deck.Card3} />\n        <Card key={'$id'+deck.Card4.Id} card={deck.Card4} />\n        </div>\n        \n        <div className=\"d-inline-flex m-0\">\n           <Card key={'$id'+deck.Card5.Id} card={deck.Card5} />\n           <Card key={'$id'+deck.Card6.Id} card={deck.Card6} />\n           <Card key={'$id'+deck.Card7.Id} card={deck.Card7} />\n           <Card key={'$id'+deck.Card8.Id} card={deck.Card8} />\n           </div>\n\n        </div>);\n        */\n","import { axios } from \"../axios\";\n\n\nexport function FormatTag(tag)\n{\n  \n  let tagFormat = '';\n  let formattedTag = '';\n  if(tag)\n{\n  tagFormat = tag.substring(0,3);\n  if(tagFormat == \"%23\")\n  {\n    formattedTag = tag;\n  }\n  else if(tagFormat[0] == '#')\n  {\n    formattedTag = \"%23\"+tag.substring(1);\n  }\n  else  \n  {\n    formattedTag = \"%23\" + tag;\n  }\n}\nreturn formattedTag.toUpperCase();\n}\nexport function ConvertTimer(dateTime)\n{\n  if(dateTime.length > 0){\n\n  //2021 07 17 T 06 42 25\n  let year = dateTime.substring(0,4);\n  let month = dateTime.substring(4,6);\n  let day = dateTime.substring(6,8);  \n  let hours = dateTime.substring(9,11);\n  let minutes = dateTime.substring(11,13);\n  let seconds = dateTime.substring(14,15);\n  //- (offset/60)\n\nvar convertedDate = new Date(year, month-1, day, hours, minutes, seconds,0);\n\nlet returnString = convertedDate.toDateString();\n\nlet timeString = convertedDate.toTimeString().substring(0,8) + \" UTC\";\n\nreturnString = returnString + \", \" + timeString;\n   return returnString;\n  }\n  else return null\n}\n\nexport async function GetClanAsync(tag){\n  if(tag){\n    let modifiedTag = FormatTag(tag);\n  return axios.get('Clans/'+tag)\n.then((response) => response.data\n, (error) => { \n});\n}\n}\n\n\nexport async function RequestResetPasswordPostAsync(userEmail){\n  return axios.post('Users/ResetPassword/'+userEmail)\n.then((response) => response.data\n, (error) => { \n});\n\n}\n\n\nexport async function ResetPasswordPostAsync(password, passwordResetCode){\n  return axios.post('Users/ResetPassword/Authenticate',{\n    password: password,\n    passwordResetCode: passwordResetCode\n  })\n.then((response) => response.data\n, (error) => { \n});\n\n}\n\n\nexport function GetDeckById(deckId){\n  const response = axios.get(\"Decks/\"+deckId).then();\n  return response.data;\n}\n/*\n\n    const config = { headers: {} };\n    axios\n    .post(\"Users/login\", {\n      Username: username,\n      Password: password,\n    })\n    .then(\n      (response) => {\n        \n        user = response.data;\n      },\n      (error) => {\n        user = null;\n      }\n    );\n    */","import React, { Component } from 'react';\nimport { ConvertTimer } from \"../Utilities/scripts\";\n\nclass Time extends Component{\n  constructor(props){\n    super(props);\n    this.state = {};\n  } \n  render () {\n          \n    const { time } = this.props;\n    let draw = '';\n    if(time)\n    {\n      let convertedDate = ConvertTimer(time);\n        draw = (convertedDate);\n\n    }\n    \n    \n    return (\n       <h4>{draw}</h4>\n    );\n  }\n\n}\nexport default Time;  ","import React, { Component } from \"react\";\nimport Deck from \"./Deck\";\nimport Time from \"./Time\";\nimport styles from \"../cssModules/Battle.module.css\";\n\nclass Battle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const { battle } = this.props;\n    \n    //only rendering 1v1 Battles\n    if (battle.Team1DeckBId == 0 && battle.Team1DeckAId != 0) {\n      let team1Result = \"\";\n      let team2Result = \"\";\n\n      if (battle.Team1Crowns > battle.Team2Crowns) {\n        team1Result = \"Winner\";\n        team2Result = \"Loser\";\n      } else {\n        team1Result = \"Loser\";\n        team2Result = \"Winner\";\n      }\n      \n\n    return (\n      <div className={styles.battle}>\n        \n\n        <div id=\"left-panel\" className={styles.leftPanel}>\n\n        <h1>{battle.Team1Name}</h1>\n        \n        \n        <p><b>{team1Result}</b></p>\n                  <p ><b>Crowns:</b>{battle.Team1Crowns}</p>\n                  <p><b>Trophies:</b>{battle.Team1StartingTrophies}<i>({((team1Result == \"Winner\") ? \"+\"+battle.Team1TrophyChange : battle.Team1TrophyChange )})</i></p>\n                  \n                  \n                  <Deck deck={battle.Team1DeckA} />\n\n\n        </div>\n\n        <div id=\"center-panel\" className={styles.centerPanel}>\n          <h1>VS</h1>\n          <Time  time={battle.BattleTime}/>\n        </div>\n\n        <div id=\"right-panel\" className={styles.rightPanel}>\n\n        <h1>{battle.Team2Name}</h1>\n        <p ><b>{team2Result}</b></p>\n                  <p ><b>Crowns:</b> {battle.Team2Crowns}</p>\n                  <p><b>Trophies:</b>{battle.Team2StartingTrophies}<i>({((team2Result == \"Winner\") ? \"+\"+battle.Team2TrophyChange : battle.Team2TrophyChange )})</i></p>\n                  \n                \n                  <Deck deck={battle.Team2DeckA} />\n\n        </div>\n    </div>);\n      \n      \n    }\n    else return null;\n\n  }\n}\nexport default Battle;\n","import { axios } from \"../axios\";\nimport { FormatTag } from \"./scripts\";\n\n//const configOLD = { headers: { Authorization: `bearer ${user['token']}`}};\n\nexport async function LoginFunctionAsync(username, password) {\n  try {\n    const response = await axios.post(\"Users/login\", {\n      Username: username,\n      Password: password,\n    });\n    return response.data;\n  } catch {\n    return undefined;\n  }\n}\n\nexport async function GetBattlesAsync() {\n  try {\n    const response = await axios.get(\"battles\");\n    return response.data;\n  } catch {\n    return undefined;\n  }\n}\n\nexport async function GetClanAsync(tag) {\n  \n  try {\n    const searchTag = FormatTag(tag);\n    \n\n    const response = await axios.get(\"clans/\" + searchTag);\n    return response.data;\n  } catch {\n    return undefined;\n  }\n}\n\n\nexport async function GetPlayerBattlesAsync(playerTag) {\n  if (playerTag) {\n    try {\n      const searchTag = FormatTag(playerTag);\n      \n        const responseBattles = await axios.get(\"battles/player/\" + searchTag);\n        return responseBattles.data\n    } catch {\n      return undefined;\n    }\n  }\n}\n\nexport async function GetChestsAsync(playerTag) {\n  try {\n    const response = await axios.get(\n      \"players/chests/\" + FormatTag(playerTag),\n      {}\n    );\n    return response.data;\n  } catch {\n    return undefined;\n  }\n}\n\nexport async function updateUserSettings(user, tag, password, newPassword) {\n  const config = {\n    headers: { Authorization: `bearer ${user[\"bearerToken\"]}` },\n  };\n  try {\n    const response = await axios.post(\n      \"Users/Update\",\n      {\n        user: {\n          Username: user.username,\n          Password: password,\n          Tag: tag,\n          BearerToken: user.bearerToken,\n        },\n        newPassword: newPassword,\n      },\n      config\n    );\n\n    return response.data;\n  } catch {\n    return undefined;\n  }\n}\n\nexport async function getPlayerDataAsync(tag) {\n  try {\n    const response = await axios.get(\"players/\" + FormatTag(tag));\n    return response.data;\n  } catch {\n    return undefined;\n  }\n}\n\n\n\n\nexport async function GetDeckAsync(tag) {\n  \n  try {\n\n    const response = await axios.get(\"decks/\" +6224);\n    return response.data;\n  } catch {\n    return undefined;\n  }\n}\n\n\n/*\n\n\n  async function getCard(id) {\n    const response = axios.get(\"cards/\" + id, config);\n    return response.data;\n  }\n\n  */\n\n// const getBattles = async (e) => {\n//     let fetchedBattles = await GetBattlesAsync();\n//     if(fetchedBattles != null)\n//     {\n//         setBattles(fetchedBattles);\n\n//     setBattlesFetched(true);\n//     }\n// }\n","import React, { Component, useEffect } from 'react';\nimport Battle from './Battle';\nimport { GetBattlesAsync } from \"../Utilities/axios-functions\";\nimport { axios } from \"../axios\";\nimport { GetPlayerBattlesAsync } from \"../Utilities/axios-functions\"; \nimport styles from \"../cssModules/BattleCollection.module.css\";\n\nclass BattleCollection extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      battles:[]\n    };\n  } \n\n  async componentDidMount()\n  {\n    const { playerTag } = this.props;\n\n    //if there is a tag in the header it will search that individual player\n    if(playerTag)\n    {\n      //gets player's battles from backend\n      const fetchedBattles = await GetPlayerBattlesAsync(playerTag);\n\n      //if successfully fetched battles sets the state variable\n      if(fetchedBattles) this.setState({battles:fetchedBattles});\n    }\n    else //if this collection is being creeated without a given tag fetches all recent battles from backend\n    {\n      //gets recent battles from backed\n      const fetchedBattles = await GetBattlesAsync();\n      if(fetchedBattles) this.setState({battles:fetchedBattles});\n    }\n  }\n\n\n  render () {\n    let componentHeader = (<h2>Loading Battles...</h2>);\n\n    let battlesDraw =  [];\n\n\n\n    //if the battles state was set after success fully fetching from backend, it maps these battles as components into battlesDraw[]\n    if(this.state.battles) \n    {\n      battlesDraw = this.state.battles.map((b,i) => <Battle key={'$battle-'+i} battle={b}/>);\n    }\n\n    if(battlesDraw.length > 0) { componentHeader = (<h2>Recently Recorded Battles</h2>); }\n    \n\n    return (<div className={styles.battleCollection} >\n      {componentHeader}\n      {battlesDraw}\n       </div>\n    );\n  }\n\n}\nexport default BattleCollection;  ","import React, { Component } from \"react\";\n\nclass SearchBoxSelector extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searching: \"player\",\n      playerClass: \"nav-link active\",\n      clanClass: \"nav-link text-light \",\n    };\n  }\n\n  render() {\n    const clickPlayer = () =>\n    {\n        this.props.playerSearchSelect();\n        this.setState({playerClass:\"nav-link active\", clanClass:\"nav-link text-light\", searching:\"player\"});\n    }\n    const clickClan = () =>\n    {\n        this.props.clanSearchSelect();\n        this.setState({playerClass:\"nav-link text-light\", clanClass:\"nav-link active\", searching:\"clan\"});\n    }\n\n    let searchSelect = (\n      <div>\n            <ul className=\"nav nav-tabs border-0\">\n              <li className=\"nav-item\">\n                <button key=\"$playerButton\" className={this.state.playerClass} onClick={clickPlayer}>Player</button>\n              </li>\n\n              <li className=\"nav-item\">\n                <button key=\"$clanButton\" className={this.state.clanClass} onClick={clickClan}>Clan</button>\n              </li>\n            </ul>\n      </div>\n    );\n    return <div>{searchSelect}</div>;\n  }\n}\nexport default SearchBoxSelector;\n","import { stat } from \"fs\";\nimport React, { Component, useState } from \"react\";\nimport { Redirect, Route } from \"react-router\";\nimport { FormatTag } from \"../Utilities/scripts\";\nimport SearchBoxSelector from \"./SearchBoxSelector\";\n\nclass SearchBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searching: \"player\",\n      searchInput: \"\",\n      validTag: \"false\",\n      searchPlaceholder:\"#29PGJURQL\",\n      playerClass:\"nav-link active\",\n      clanClass:\"nav-link\",\n      redirect:false\n    };\n  }\n\n  render() {\n\n    let draw = '';\n\nconst playerSearchSelect = e => this.setState({searching:\"player\", searchPlaceholder:\"#29PGJURQL\"});\nconst clanSearchSelect = e => this.setState({searching:\"clan\", searchPlaceholder:\"#8CYPL8R\"});\n\n    //      homeSplash = (<Redirect push to={redirectUrl}/>);\n\n\n//\"/player/\" + FormatTag(searchString)\n\nconst search = (e) => {\n    this.setState({searchInput:FormatTag(this.state.searchInput),redirect:true});\n\n//this.props.search(\"/\" + this.state.searching + \"/\"+ this.state.searchInput);\n\n// if(this.state.searching == \"player\") {\n//     return (<div>< push to=\"/Player/%2329PGJURQL\" /></div>);\n//     //return (<div><Redirect exact to={\"/Player/\" + FormatTag(this.state.searchInput)} /></div>);\n// }\n// else if(this.state.searching == \"clan\"){\n//     return (<div><Redirect exact to={\"/Clan/\" + FormatTag(this.state.searchInput)} /></div>);\n// }\n\n}\nlet searchGroup = (<form key=\"$playerForm\" onSubmit={this.search}>\n    \n<input key=\"$search-input\"  onChange={(e) => this.setState({searchInput:e.target.value})} className=\"form-control\"  placeholder={this.state.searchPlaceholder} />\n<button key=\"$search-button\" className=\"btn-dark mt-2 mb-3\" onClick={search}>Get {this.state.searching} Data</button>\n</form>);\n\nif(!this.state.redirect)\n{\n    draw = (<div className={\"home-search\"}> \n      <h2>Search For Player or Clan</h2>\n       \n            <p><SearchBoxSelector playerSearchSelect={playerSearchSelect} clanSearchSelect={clanSearchSelect} />\n            {searchGroup}\n            </p>\n        </div>);\n\n}\nelse draw = <Redirect push to={\"/\" + this.state.searching + \"/\" + this.state.searchInput}/>\n\n    return draw;\n  }\n}\nexport default SearchBox;\n","import React, { Component } from 'react';\nimport styles from \"../cssModules/Chest.module.css\";\nclass Chest extends Component{\n  constructor(props){\n    super(props);\n    this.state = {};\n  } \n\n\n  \n  render () {\n          \n    const { chest } = this.props;\n\n    if(chest.Name)\n    {\n      return (<div className={styles.chest}><strong>{chest.Index+1}</strong> <img  key={'$id'+chest.Index}  src={chest.Url}/>\n     <p>{chest.Name}</p></div>);\n    }\n  }\n\n}\nexport default Chest;  ","import { Alert } from 'bootstrap';\nimport React, { Component, useEffect } from 'react';\nimport Chest from './Chest';\nimport { GetChestsAsync } from '../Utilities/axios-functions';\nimport { FormatTag } from '../Utilities/scripts';\nimport styles from '../cssModules/ChestCollection.module.css';\n\nclass ChestCollection extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      chestCollection:[]\n    };\n  } \n\n  async componentDidMount()\n  {\n    const { playerTag } = this.props;\n      if(playerTag)\n      {\n        try {\n        let chests = await GetChestsAsync(FormatTag(playerTag));\n        this.setState({chestCollection:chests});\n        }\n        catch{}\n      }\n  }\n\n\n\n  render () {\n    let draw = '';\n    let header = ( <h2>Loading Upcoming Chests</h2> );\n    if(this.state.chestCollection && this.state.chestCollection.length > 0)\n    {\n      header = (<div className=\"\"><h2>Upcoming Chests</h2> <p>(you need x number of wins to gain the below chests)</p></div>);\n      draw = this.state.chestCollection.map((c)=> <Chest key={\"$chest-+\"+c.Index} chest={c}/>)\n    }\n    return (<div className={styles.collection} >\n      {header}\n      <div className={styles.chestbox} key=\"$chest-collection\">{draw}</div>\n       </div>\n    );\n  }\n\n}\nexport default ChestCollection;  ","import React, { useContext } from \"react\";\nimport { UserContext } from \"../UserContext\";\nimport BattleCollection from \"../components/BattleCollection\";\nimport SearchBox from \"../components/SearchBox\";\nimport ChestCollection from \"../components/ChestCollection\";\nimport styles from \"../cssModules/HomePage.module.css\";\n\nconst HomePage = () => {\n  const { user, setUser } = useContext(UserContext);\n\n  let upcomingChests = '';\n  let drawBattles = <BattleCollection />;\n  let searchBox = <SearchBox/>;\n  let greeting = '';\n\n  if(user) \n  { \n    upcomingChests =(<div className={styles.chestCollection}> <ChestCollection playerTag={user.tag} /></div>); \n  greeting = (<div className={styles.greeting}><h1>Welcome {user.username}</h1></div>)\n  }\n\n  return (\n    <div>\n      <div className={styles.backgroundImage}>\n      {greeting}\n      {upcomingChests}\n      {searchBox}\n      </div>\n      {drawBattles}\n    </div>\n  );\n};\n\nexport default HomePage;\n\n","import React, {useState, useContext} from \"react\";\nimport {UserContext} from \"../UserContext\";\nimport { axios } from \"../axios\";\nimport { Link } from \"react-router-dom\";\n\nconst UserSettingsPage = () => {    \n    const {user, setUser} = useContext(UserContext);\n    const[password, setPassword] = useState('');\n    const[email,setEmail] = useState('');\n    const[role,setRole] = useState('');\n    const[tag,setTag] = useState('');\n    const[clanTag,setClanTag] = useState('');\n\n    //check legitimacy of either user or clan Tag\n    const UpdateUser = (e) => {\n        e.preventDefault();\n        const config = { headers: { Authorization: `bearer ${user['token']}`}};\n        \n        //axios headers\n        //bearer assign\n        //put\n      \n\n      \n      axios.put('Users', {\n        Username: user['username'],\n        Password: user['password'],\n        Token: user['token'],\n        Email: email,\n        Tag: tag,\n        ClanTag: clanTag,\n        Role: role\n      },config)\n      .then((response) => {\n      }, (error) => {\n        console.log(error);\n      });\n\n        //make put request w/ Bearer Token\n    }\n\n//make switch based of role level\n//end users can't change\n//Username\n//role\n//token\n    \n    return (\n        <div>\n            <form onSubmit={UpdateUser}>\n\n                <h1 className=\"h3 mb-3 fw-normal\">Change your profile settings: <b>{user['username']}</b> </h1>\n\n                <label>Email\n                <input type=\"email\" id=\"inputEmail\" className=\"form-control\" placeholder={user['email']} onChange={e => setEmail(e.target.value)}required/>\n                </label>\n                \n                <label>Tag\n                <input type=\"tag\" id=\"inputTag\" className=\"form-control\" placeholder={user['tag']} onChange={e => setTag(e.target.value)}required />\n                </label>\n\n                <label>ClanTag\n                <input type=\"clantag\" id=\"inputClanTag\" className=\"form-control\" placeholder={user['clanTag']} onChange={e => setClanTag(e.target.value)}required />\n                </label>\n\n                <label>Role\n                <input type=\"role\" id=\"inputRole\" className=\"form-control\" placeholder={user['role']} onChange={e => setRole(e.target.value)}required />\n                </label>\n                <br/>\n                \n                <Link className=\"link\" to=\"/logintest\">change password</Link>\n\n                <br/>\n\n                <button className=\"w-100 m-2 btn btn-lg btn-primary\" type=\"submit\">Update User</button>\n\n            </form>\n        </div>\n    );\n};\n\nexport default UserSettingsPage;","import React, { Component } from \"react\";\n\nimport Card from \"../components/Card\";\nimport Deck from \"../components/Deck\";\nimport Time from \"./Time\";\nimport { Redirect } from \"react-router-dom\";\nimport { getPlayerDataAsync } from \"../Utilities/axios-functions\";\n\nclass Player extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      player: []\n    };\n  }\n\n  async componentDidMount() {\n    const { playerTag } = this.props;\n\n    //call player at given Tag\n\n    try {\n      let responsePlayer = await getPlayerDataAsync(playerTag);\n\n      if(responsePlayer)\n      {\n\n        this.setState({ player: responsePlayer });\n\n      }\n      else this.setState({redirect:true});\n\n\n    } catch {this.setState({redirect:true})}\n  } \n\n  render() {\n    let draw = \"\";\n    if(this.state.redirect){\n      return <Redirect to=\"/\" />;\n    }\n     if(this.state.player && this.state.player.Name)\n    {\n      draw = (\n  <div className=\"card\">\n    <div className=\"card-body text-center\">\n      <div className=\"row d-inline-flex text-center\">\n        <div className=\"col\">\n          <div className=\"row d-inline-flex\">\n            <h1 className=\"d-inline\">{this.state.player.Name}</h1>\n            <h6 className=\"d-inline\">(Lvl.{this.state.player.ExpLevel})</h6>\n            <p className=\"d-inline\">\n              <i>Tag:{this.state.player.Tag}</i>\n            </p>\n          </div>\n          <p className=\"text-center m-0\">\n            <b>Current Deck</b>\n          </p>\n          <Deck deck={this.state.player.Deck} />\n\n          <p>\n            <b>Last Seen:</b>\n            {(this.state.player.Clan!=null)?<Time time={this.state.player.LastSeen} />:\"Unkown\"}\n            \n          </p>\n        </div>\n\n        <div className=\"col\">\n          <div className=\"text-center\">\n            <p>\n              <b>Trophies:</b>\n              {this.state.player.Trophies}\n            </p>\n\n            <p>\n              <b>Best Trophies:</b>\n              {this.state.player.BestTrophies}\n            </p>\n            <p>\n              <b>Wins:</b>\n              {this.state.player.Wins}\n            </p>\n            <p>\n              <b>Losses:</b>\n              {this.state.player.Losses}\n            </p>\n            <p>\n              <b>Three Crown Wins:</b>\n              {this.state.player.ThreeCrownWins}\n            </p>\n\n            <p>\n              <b>Star Points:</b>\n              {this.state.player.StarPoints}\n            </p>\n\n            <p>\n              <b>Cards Discovered:</b>\n              {this.state.player.CardsDiscovered}\n            </p>\n\n            <p>\n              <b>Total Games:</b>\n              {this.state.player.BattleCount}\n            </p>\n          </div>\n        </div>\n\n        <div className=\"col\">\n          <p>\n            <b>Clan Name:</b>\n            {(this.state.player.Clan!=null)? this.state.player.Clan.Name:\"Not In A Clan\"}\n          </p>\n\n          <p>\n            <b>Clan Tag:</b>\n            {(this.state.player.Clan!=null)? this.state.player.ClanTag:\"Not In A Clan\"}\n          </p>\n          <p>\n            <b>Role:</b>\n            {(this.state.player.Clan!=null)?this.state.player.Role:\"Not In A Clan\"}\n          </p>\n          <p>\n            <b>Recent Donations:</b>\n            {(this.state.player.Clan!=null)?this.state.player.Donations:\"Not In A Clan\"}\n          </p>\n          <p>\n            <b>Recent Donations Recieved:</b>\n            {(this.state.player.Clan!=null)?this.state.player.DonationsReceived:\"Not In A Clan\"}\n          </p>\n          <p>\n            <b>Total Donations:</b>\n            {(this.state.player.Clan!=null)?this.state.player.TotalDonations:\"Not In A Clan\"}\n          </p>\n          <p>\n            <b>Total Donations Recieved:</b>\n            {(this.state.player.Clan!=null)?this.state.player.ClanCardsCollected:\"Not In A Clan\"}\n          </p>\n\n          <p>\n            <b>War Day Wins:</b>\n            {(this.state.player.Clan!=null)?this.state.player.WarDayWins:\"Not In A Clan\"}\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\n\n    }\n    else draw = (<h1>Loading Player Data</h1>)\n\n    return <div>{draw}</div>;\n  }\n}\nexport default Player;\n\n    /*\n    if (tag != '') {\n      try {\n        const responsePlayer = await axios.post(\"players/official/\" + FormatTag(tag));\n        setPlayer(responsePlayer.data);\n\n        // let response = [];\n        \n        //   while(response.length == 0)\n        //   {\n        //     //times out to give the data feeder to catch up with the registered player\n        //     await new Promise(r => setTimeout(r, 2000));\n        //     const responseBattles = await axios.get(\"battles/player/\" + FormatTag(tag));\n\n        //     if(responseBattles.data != null) response = responseBattles.data;\n\n        //     setBattles(response);\n        //   }\n\n      } catch {}\n    }\n*/","import React, { useState, useContext, useEffect } from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\n\nimport { UserContext } from \"../UserContext\";\nimport { axios } from \"../axios\";\n\nimport Battle from \"../components/Battle\";\nimport Player from \"../components/Player\";\nimport ChestCollection from \"../components/ChestCollection\";\nimport BattleCollection from \"../components/BattleCollection\";\nimport Deck from \"../components/Deck\";\nimport { GetDeckAsync } from \"../Utilities/axios-functions\";\n\nconst PlayerPage = () => {\n  const { playerTag } = useParams();\n  const { user, setUser } = useContext(UserContext);\n\n  const [tag, setTag] = useState(\"\");\n  const [deck, setDeck] = useState(\"\");\n\n  //same as componentDidMount\n  useEffect(async() => {\n    if (playerTag != undefined) {\n      setTag(playerTag);\n    } else if (user && user.tag != \"\") {\n      setTag(user.tag);\n    } \n\n  }, []);\n  \n  if(tag)\n  {\n    \n    return (\n      <div>\n      {<ChestCollection playerTag={tag} />}\n        {<Player playerTag={tag} />}\n        {<BattleCollection playerTag={tag} />}\n      </div>\n    );\n  }\n  else return(<h1>Loading...</h1>)\n\n};\n\nexport default PlayerPage;\n","import React, {useState, useContext} from \"react\";\nimport {Redirect} from 'react-router-dom';\n\nimport { UserContext } from \"../UserContext\";\nimport { LoginFunctionAsync } from \"../Utilities/axios-functions\";\n\nconst LoginPage = () => {\n\n    //useState returns an array, we destructure it into a variable and function\n    const [name, setName] = useState('');\n    const [password, setPassword] = useState('');\n    const {user, setUser, player, setPlayer} = useContext(UserContext);\n\n\n    let login = '';\n\n        const makePostRequest = async (e) => {\n            e.preventDefault();\n        let stayLogged = false;\n        if(document.getElementById('stayLoggedIn').checked) {stayLogged= true; }\n        \n        let tempUser = await LoginFunctionAsync(name,password);\n        setUser(tempUser);\n\n\n        if(stayLogged&&tempUser!=null) { localStorage.setItem('user', JSON.stringify(tempUser)); }\n        \n    }\n\n\n    if(user == null)\n    {\n        login = (\n        <form className=\"d-inline-block\" onSubmit = {makePostRequest}>\n            <h1 className=\"h3 mb-3\">Clash Codex Login</h1>\n\n            <input type=\"username\" id=\"inputUsername\" className=\"form-control\" placeholder=\"Username\" onChange={ e => setName(e.target.value)} required />\n\n            <input type=\"password\" id=\"inputPassword\" className=\"form-control\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} required />\n           <div> <input id=\"stayLoggedIn\" type=\"checkbox\" ></input> stay logged in</div>\n\n            <button className=\"w-100 btn btn-lg btn-primary m-2\" type=\"submit\">Sign in</button>\n            <p><a href=\"/forgotpassword\">i forgot my password</a></p>\n        </form>);\n\n    }\n    else { login =(<Redirect to=\"/\" />);}\n\n    return (\n        <div>\n            {login}\n        </div>\n    );\n};\n\nexport default LoginPage;","import React, { Component } from 'react';\nimport { ConvertTimer,FormatTag } from \"../Utilities/scripts\";\nimport $ from \"jquery\"; \nimport styles from \"../cssModules/ClanPlayer.module.css\";\nimport { Redirect } from 'react-router-dom';\n\nclass ClanPlayer extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      redirect:false\n    };\n  } \n\n  handleClick()\n  {\n    this.setState({redirect:true});\n  }\n\n  render () {\n\n\n    const { clanPlayer } = this.props;\n\n    let draw = '';\n  \n    if(this.state.redirect){ return <Redirect to={\"/player/\" + FormatTag(clanPlayer.Tag)} /> }\n\n    if(clanPlayer)\n    {\n      return (<tr className={styles.clickableRow} onClick={this.handleClick.bind(this)} >\n      <th scope=\"row\" >{clanPlayer.Name}</th>\n      <td>{clanPlayer.Tag}</td>\n      <td>{clanPlayer.ExpLevel}</td>\n      <td>{clanPlayer.Trophies}</td>\n      <td>{clanPlayer.Role}</td>\n      <td>{ConvertTimer(clanPlayer.LastSeen)}</td>\n      <td>{clanPlayer.Donations}</td>\n      <td>{clanPlayer.DonationsReceived}</td>  \n      </tr>);\n    }\n    else return (<></>);\n  }\n\n}\n\nexport default ClanPlayer; ","import React, { Component } from \"react\";\nimport ClanPlayer from \"./ClanPlayer\";\n\nclass ClanPlayerCollection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const { clanPlayerCollection } = this.props;\n    let draw = \"\";\n\n\n    if (clanPlayerCollection != null) {\n      draw = clanPlayerCollection.map((c) => (\n        <ClanPlayer key={\"$player-list-\" + c.Tag} clanPlayer={c} />\n      ));\n    }\n\n\n    return (\n      <div className=\"table-responsive\">\n        <table key=\"$player-collection\" className=\"table table-hover\">\n          <thead>\n            <tr>\n              <th scope=\"col\"> Name</th>\n              <th scope=\"col\"> Tag</th>\n              <th scope=\"col\"> Level </th>\n              <th scope=\"col\"> Trophies </th>\n              <th scope=\"col\"> Role </th>\n              <th scope=\"col\"> Last Seen </th>\n              <th scope=\"col\"> Donated </th>\n              <th scope=\"col\"> Donations Recieved </th>\n            </tr>\n          </thead>\n          <tbody>\n          {draw}\n          </tbody>\n\n        </table>\n        </div>\n    );\n  }\n}\nexport default ClanPlayerCollection;\n\n{\n  /* <div className=\"card-body text-center d-inline-block\">\n<div className=\"col-2 clan-list-item\"><b>Name</b></div>\n<div className=\"col-2 clan-list-item\"><b>Tag</b></div>\n<div className=\"col-1 clan-list-item\"><b>Level</b></div>\n<div className=\"col-1 clan-list-item\"><b>Trophies</b></div>\n<div className=\"col-2 clan-list-item\"><b>Role</b></div>\n<div className=\"col-2 clan-list-item\"><b>Last Seen</b></div>\n<div className=\"col-1 clan-list-item\"><b>Donated</b></div>\n<div className=\"col-1 clan-list-item\"><b>Donations Recieved</b></div>\n</div>\n */\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router\";\n\nimport Card from \"../components/Card\";\nimport Deck from \"../components/Deck\";\nimport { GetClanAsync } from \"../Utilities/axios-functions\";\nimport ClanPlayer from \"./ClanPlayer\";\nimport ClanPlayerCollection from \"./ClanPlayerCollection\";\nimport Time from \"./Time\";\n\nclass Clan extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clan: [],\n      redirect: false\n    };\n  }\n\n  async componentDidMount() {\n    const { clanTag } = this.props;\n\n    if (clanTag) {\n      const clan = await GetClanAsync(clanTag);\n\n      if (clan != undefined) {\n\n        this.setState({ clan: clan });\n      } \n      else {\n        this.setState({redirect:true});\n      }\n    }\n  }\n\n  render() {\n    let clanDraw = \"\";\n    let membersDraw = \"\";\n    let membersHeader = \"\";\n\n    if (this.state.redirect)\n    {\n      return (<Redirect to=\"/\" />);\n    }\n    if (this.state.clan && this.state.clan.Name) {\n      clanDraw = (\n        <div className=\" m-0\">\n          <h1>{this.state.clan.Name}</h1>\n\n          <h6>\n            <b>Tag:</b>\n            {this.state.clan.Tag}\n          </h6>\n          <p>\n            <b>Members:</b>\n            {this.state.clan.Members}/50\n          </p>\n          <p>\n            <b>{this.state.clan.Description}</b>\n          </p>\n\n          <p>\n            <b>Required Trophies:</b>\n            {this.state.clan.RequiredTrophies}\n          </p>\n\n          <div className=\"col \">\n            <p>\n              <b>Donations Per Week:</b>\n              {this.state.clan.DonationsPerWeek}\n            </p>\n            <p>\n              <b>Clan War Trophies:</b>\n              {this.state.clan.ClanWarTrophies}\n            </p>\n            <p>\n              <b>Clan Chest Level:</b>\n              {this.state.clan.ClanChestLevel}\n            </p>\n            <p>\n              <b>Clan Chest Status:</b>\n              {this.state.clan.ClanChestStatus}\n            </p>\n          </div>\n\n          <div className=\"col\">\n            <p>\n              <b>Type:</b>\n              {this.state.clan.Type}\n            </p>\n            <p>\n              <b>Location Code:</b>\n              {this.state.clan.LocationCode}\n            </p>\n\n            <p>\n              <b>Badge Id:</b>\n              {this.state.clan.BadgeId}\n            </p>\n            <p>\n              <b>Clan Score:</b>\n              {this.state.clan.ClanScore}\n            </p>\n          </div>\n        </div>\n      );\n    } else return <h1>Loading Clan Data, This May Take Some Time</h1>;\n\n\n    \n    if (this.state.clan && this.state.clan.MemberList) {\n      membersDraw = (\n        <ClanPlayerCollection\n          clanPlayerCollection={this.state.clan.MemberList}\n        />\n      );\n    }\n\n    return (\n      <div>\n          {clanDraw}\n          {membersDraw}\n      </div>\n    );\n  }\n}\nexport default Clan;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\n\nimport { UserContext } from \"../UserContext\";\nimport Clan from \"../components/Clan\";\nimport { GetClanAsync } from \"../Utilities/scripts\";\n\nconst ClanPage = () => {\n\n    const { user, setUser } = useContext(UserContext);\n    const [tag, setTag] = useState('');\n    const [redirect, setRedirect] = useState(false);\n    const {clanTag} = useParams();\n\n  //same as componentDidMount\n  useEffect( () => {\n    if(clanTag != undefined) { setTag(clanTag) }\n    else if(user && user.clanTag != \"\") { setTag(user.clanTag) }\n    else setRedirect(true);\n  }, [] );\n\n\n\n    let draw =(<h1>Loading...</h1>);\n\n    const clan = <Clan clanTag={tag} />;\n\n  if(clan)\n  {\n     if(tag) return clan;\n    else return draw;\n    \n  }\n\n    \n};\n\nexport default ClanPage;","import React from \"react\";\n\nconst ContactPage = () => {\n\n\n    let draw =(<div>\n        <h1>Contact</h1>\n        <p>Hi, we'd love to hear from you. If you find a bug or have a feature you would to see implemented you can email me at <a href=\"mailto:clashroyaletracker@gmail.com\">clashroyaletracker@gmail.com</a></p>\n        </div>);\n\n\n    \n    return (\n        <div className=\"p-1\">\n            {draw}\n        </div>\n    );\n};\n\nexport default ContactPage;","import React, { useState, useContext } from \"react\";\nimport { Redirect, useParams } from 'react-router-dom';\n\nimport { UserContext } from \"../UserContext\";\nimport { axios } from \"../axios\";\n\nconst EmailVerificationPage = () => {\n\n\n    const { user, setUser } = useContext(UserContext);\n    \n    const { verificationCode } = useParams();\n\n    const [verificationSent,setVerificationSent] = useState(false)\n\n    const authenticate = async (e) => {\n        let codeToSend = verificationCode;\n        await axios.post(\"Users/VerifyAccount/\"+ codeToSend\n        )\n        .then(\n          (response) => {\n            setUser(response.data);\n          },\n          (error) => {\n            console.log(error);\n          });\n    \n\n        }\n\n        let draw = 'verifying account';\n\n        if(!verificationSent) {\n            authenticate();\n            setVerificationSent(true);\n        }\n        else \n        {\n          draw = (<Redirect to=\"/\" />)\n        }\n        \n    return (<div>\n        {draw}\n        </div>\n    );\n    \n    \n}\n\nexport default EmailVerificationPage;\n\n\n//ask someone why this doesn't work\n   // draw = (user) ? (<div><h2>Verifying Email</h2></div>):(<div><Redirect to=\"/\" /></div>) ;\n","import React, { useState, useContext } from \"react\";\nimport { UserContext } from \"../UserContext\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { axios } from \"../axios\";\nimport {\n  RequestResetPasswordPostAsync,\n  ResetPasswordPostAsync,\n} from \"../Utilities/scripts\";\n\nconst ForgotPasswordPage = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [emailSent, setEmailSent] = useState(false);\n  const [passwordReset, setPasswordReset] = useState(false);\n  const [redirect, setRedirect] = useState(false);\n  const { passwordResetCode } = useParams();\n  const { user, setUser } = useContext(UserContext);\n\n  const requestPasswordReset = async () => {\n    RequestResetPasswordPostAsync(email);\n    setEmailSent(true);\n  };\n\n  const sendPasswordReset = async () => {\n    if (passwordResetCode != null) {\n      setPasswordReset(true);\n      let fetchedUser = await ResetPasswordPostAsync(\n        password,\n        passwordResetCode\n      );\n      if (fetchedUser.username) {\n        setUser(fetchedUser);\n      } else setRedirect(true);\n    }\n  };\n\n  let draw = \"\";\n\n  if (user) {\n    draw = (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    );\n  } else {\n    if (passwordResetCode != null) {\n      let passwordsForm = (\n        <div>\n          <form onSubmit={sendPasswordReset}>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"Password\"\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"Re-Enter Password\"\n              onChange={(e) => setPassword2(e.target.value)}\n              required\n            />\n          </form>\n        </div>\n      );\n\n      let notMatchDraw = \"\";\n\n      if (password != password2) {\n        notMatchDraw = <p className=\"warning-text\">passwords do not match</p>;\n      } else {\n        notMatchDraw = \"\";\n      }\n\n      draw = (\n        <div>\n          <h1>Reset Password</h1>\n\n          {passwordsForm}\n          {notMatchDraw}\n          <button\n            className=\"w-100 btn btn-lg btn-primary m-2\"\n            onClick={sendPasswordReset}\n          >\n            Reset Password\n          </button>\n        </div>\n      );\n    } else {\n      if (emailSent == false) {\n        draw = (\n          <div>\n            <h1>Forgot Password/Username</h1>\n            <p>\n              please enter your email and a link will be sent to recover your\n              account\n            </p>\n            <form onSubmit={requestPasswordReset}>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Account Email\"\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n\n              <button\n                className=\"w-100 btn btn-lg btn-primary m-2\"\n                type=\"submit\"\n              >\n                Reset Password\n              </button>\n            </form>\n          </div>\n        );\n      } else {\n        draw = (\n          <div>\n            <p>Please check your email for the recovery link</p>\n            <button\n              className=\"w-100 btn btn-lg btn-primary m-2\"\n              onClick={requestPasswordReset}\n            >\n              Resend Reset Link\n            </button>\n          </div>\n        );\n      }\n    }\n  }\n\n  let redirectElement = \"\";\n  if (redirect) {\n    redirectElement = (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    );\n  } else redirectElement = \"\";\n\n  return (\n    <div>\n      {draw}\n      {redirectElement}\n    </div>\n  );\n};\nexport default ForgotPasswordPage;\n","import logo from './logo.svg';\nimport './App.css';\nimport MyNavbar from './components/Navbar.js';\nimport RegisterPage from './Pages/RegisterPage';\nimport HomePage from './Pages/HomePage';\nimport {BrowserRouter, Route, Switch, useParams } from 'react-router-dom';\nimport React, { useContext, useState, useMemo } from 'react';\nimport { UserContext } from \"./UserContext\";\nimport UserSettingsPage from './Pages/UserSettingsPage copy';\nimport PlayerPage from './Pages/PlayerPage';\nimport LoginPage from './Pages/LoginPage';\nimport ClanPage from './Pages/ClanPage';\nimport ContactPage from './Pages/ContactPage';\nimport EmailVerificationPage from './Pages/EmailVerificationPage';\nimport ForgotPasswordPage from './Pages/ForgotPasswordPage';\n\nfunction App() {\n    const [user, setUser] = useState(null);\n\n   if(localStorage.getItem('user') && user == null)\n   {\n    setUser(JSON.parse(localStorage.getItem('user')));\n   }\n\n  return (\n    <div className=\"form-signin\">\n    <UserContext.Provider value={{user, setUser}}>\n    <BrowserRouter>\n          <MyNavbar  />\n          \n          <Route path=\"/\" exact component={HomePage}  />\n\n          <Route path=\"/login\" exact  component={LoginPage}  />\n          <Route path=\"/register\" exact component={RegisterPage}  />\n          <Route path=\"/settings\"exact  component={UserSettingsPage}  />\n          <Route path=\"/clan\" exact component={ClanPage}  />\n          <Route path=\"/contact\" exact component={ContactPage}  />\n          <Route path=\"/clan/:clanTag\"> <ClanPage /> </Route>\n          <Route path=\"/player\"exact  component={PlayerPage}/>\n          <Route path=\"/player/:playerTag\"><PlayerPage /></Route>\n          <Route path=\"/register/authenticate/:verificationCode\"><EmailVerificationPage /></Route>\n          <Route path=\"/forgotpassword/:passwordResetCode\"exact  component={ForgotPasswordPage}/>\n          <Route path=\"/forgotpassword\"exact  component={ForgotPasswordPage}/>\n        </BrowserRouter>\n      </UserContext.Provider>\n      </div>\n      );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}