{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Elodin\\\\Documents\\\\codexRoyale\\\\codexroyale.com\\\\React-Front-End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Elodin\\\\Documents\\\\codexRoyale\\\\codexroyale.com\\\\React-Front-End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\Elodin\\\\Documents\\\\codexRoyale\\\\codexroyale.com\\\\React-Front-End\\\\src\\\\Pages\\\\LoginPage.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { useState, useContext } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { UserContext } from \"../UserContext\";\nimport { LoginFunctionAsync } from \"../Utilities/axios-functions\";\nvar LoginPage = function LoginPage() {\n  //useState returns an array, we destructure it into a variable and function\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useContext = useContext(UserContext),\n    user = _useContext.user,\n    setUser = _useContext.setUser,\n    player = _useContext.player,\n    setPlayer = _useContext.setPlayer;\n  var login = '';\n  var makePostRequest = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e) {\n      var stayLogged, tempUser;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              stayLogged = false;\n              if (document.getElementById('stayLoggedIn').checked) {\n                stayLogged = true;\n              }\n              _context.next = 5;\n              return LoginFunctionAsync(name, password);\n            case 5:\n              tempUser = _context.sent;\n              setUser(tempUser);\n              if (stayLogged && tempUser != null) {\n                localStorage.setItem('user', JSON.stringify(tempUser));\n              }\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function makePostRequest(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  if (user == null) {\n    login = /*#__PURE__*/React.createElement(\"form\", {\n      className: \"d-inline-block\",\n      onSubmit: makePostRequest,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"h3 mb-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, \"Clash Codex Login\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"username\",\n      id: \"inputUsername\",\n      className: \"form-control\",\n      placeholder: \"Username\",\n      onChange: function onChange(e) {\n        return setName(e.target.value);\n      },\n      required: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"inputPassword\",\n      className: \"form-control\",\n      placeholder: \"Password\",\n      onChange: function onChange(e) {\n        return setPassword(e.target.value);\n      },\n      required: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 12\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      id: \"stayLoggedIn\",\n      type: \"checkbox\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 18\n      }\n    }), \" stay logged in\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"w-100 btn btn-lg btn-primary m-2\",\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/forgotpassword\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }\n    }, \"i forgot my password\")));\n  } else {\n    login = /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 20\n      }\n    });\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, login);\n};\nexport default LoginPage;","map":{"version":3,"names":["React","useState","useContext","Redirect","UserContext","LoginFunctionAsync","LoginPage","name","setName","password","setPassword","user","setUser","player","setPlayer","login","makePostRequest","e","preventDefault","stayLogged","document","getElementById","checked","tempUser","localStorage","setItem","JSON","stringify","target","value"],"sources":["C:/Users/Elodin/Documents/codexRoyale/codexroyale.com/React-Front-End/src/Pages/LoginPage.js"],"sourcesContent":["import React, {useState, useContext} from \"react\";\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport { UserContext } from \"../UserContext\";\r\nimport { LoginFunctionAsync } from \"../Utilities/axios-functions\";\r\n\r\nconst LoginPage = () => {\r\n\r\n    //useState returns an array, we destructure it into a variable and function\r\n    const [name, setName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const {user, setUser, player, setPlayer} = useContext(UserContext);\r\n\r\n\r\n    let login = '';\r\n\r\n        const makePostRequest = async (e) => {\r\n            e.preventDefault();\r\n        let stayLogged = false;\r\n        if(document.getElementById('stayLoggedIn').checked) {stayLogged= true; }\r\n        \r\n        let tempUser = await LoginFunctionAsync(name,password);\r\n        setUser(tempUser);\r\n\r\n\r\n        if(stayLogged&&tempUser!=null) { localStorage.setItem('user', JSON.stringify(tempUser)); }\r\n        \r\n    }\r\n\r\n\r\n    if(user == null)\r\n    {\r\n        login = (\r\n        <form className=\"d-inline-block\" onSubmit = {makePostRequest}>\r\n            <h1 className=\"h3 mb-3\">Clash Codex Login</h1>\r\n\r\n            <input type=\"username\" id=\"inputUsername\" className=\"form-control\" placeholder=\"Username\" onChange={ e => setName(e.target.value)} required />\r\n\r\n            <input type=\"password\" id=\"inputPassword\" className=\"form-control\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} required />\r\n           <div> <input id=\"stayLoggedIn\" type=\"checkbox\" ></input> stay logged in</div>\r\n\r\n            <button className=\"w-100 btn btn-lg btn-primary m-2\" type=\"submit\">Sign in</button>\r\n            <p><a href=\"/forgotpassword\">i forgot my password</a></p>\r\n        </form>);\r\n\r\n    }\r\n    else { login =(<Redirect to=\"/\" />);}\r\n\r\n    return (\r\n        <div>\r\n            {login}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}