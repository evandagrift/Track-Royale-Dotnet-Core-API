{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Elodin\\\\Documents\\\\codexRoyale\\\\codexroyale.com\\\\React-Front-End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Elodin\\\\Documents\\\\codexRoyale\\\\codexroyale.com\\\\React-Front-End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Elodin\\\\Documents\\\\codexRoyale\\\\codexroyale.com\\\\React-Front-End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Elodin\\\\Documents\\\\codexRoyale\\\\codexroyale.com\\\\React-Front-End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Elodin\\\\Documents\\\\codexRoyale\\\\codexroyale.com\\\\React-Front-End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Elodin\\\\Documents\\\\codexRoyale\\\\codexroyale.com\\\\React-Front-End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Elodin\\\\Documents\\\\codexRoyale\\\\codexroyale.com\\\\React-Front-End\\\\src\\\\components\\\\BattleCollection.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { Component, useEffect } from \"react\";\nimport Battle from \"./Battle\";\nimport { GetBattlesAsync } from \"../Utilities/axios-functions\";\nimport { axios } from \"../axios\";\nimport { GetPlayerBattlesAsync } from \"../Utilities/axios-functions\";\nimport styles from \"../cssModules/BattleCollection.module.css\";\nvar BattleCollection = /*#__PURE__*/function (_Component) {\n  _inherits(BattleCollection, _Component);\n  function BattleCollection(props) {\n    var _this;\n    _classCallCheck(this, BattleCollection);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BattleCollection).call(this, props));\n    _this.state = {\n      playerTag: \"\",\n      battles: [],\n      date: new Date()\n    };\n    return _this;\n  }\n  _createClass(BattleCollection, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var playerTag, fetchedBattles, _fetchedBattles, timeElapsed;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                playerTag = this.props.playerTag;\n                this.setState({\n                  date: Date.now()\n                });\n              case 2:\n                if (!playerTag) {\n                  _context.next = 10;\n                  break;\n                }\n                this.setState({\n                  playerTag: playerTag\n                });\n                //gets player's battles from backend\n                _context.next = 6;\n                return GetPlayerBattlesAsync(playerTag);\n              case 6:\n                fetchedBattles = _context.sent;\n                //if successfully fetched battles sets the state variable\n                if (fetchedBattles) this.setState({\n                  battles: fetchedBattles\n                });\n                _context.next = 14;\n                break;\n              case 10:\n                _context.next = 12;\n                return GetBattlesAsync();\n              case 12:\n                _fetchedBattles = _context.sent;\n                if (_fetchedBattles) this.setState({\n                  battles: _fetchedBattles\n                });\n              case 14:\n                if (!(this.state.battles.length < 10)) {\n                  _context.next = 20;\n                  break;\n                }\n                timeElapsed = Date.now() - this.state.date;\n                if (!(7500 > timeElapsed > 0)) {\n                  _context.next = 19;\n                  break;\n                }\n                _context.next = 19;\n                return new Promise(function (r) {\n                  return setTimeout(r, 7500 - timeElapsed);\n                });\n              case 19:\n                this.setState({\n                  date: Date.now()\n                });\n              case 20:\n                if (this.state.battles.length < 10) {\n                  _context.next = 2;\n                  break;\n                }\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentDidUpdate\",\n    value: function () {\n      var _componentDidUpdate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var playerTag, fetchedBattles, timeElapsed;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                playerTag = this.props.playerTag; //if there is a tag in the header it will search that individual player\n                if (!(playerTag != this.state.playerTag && playerTag != undefined)) {\n                  _context2.next = 15;\n                  break;\n                }\n                this.setState({\n                  battles: []\n                });\n                this.setState({\n                  playerTag: playerTag\n                });\n              case 4:\n                _context2.next = 6;\n                return GetPlayerBattlesAsync(playerTag);\n              case 6:\n                fetchedBattles = _context2.sent;\n                //if successfully fetched battles sets the state variable\n                this.setState({\n                  battles: fetchedBattles\n                });\n                if (!(this.state.battles.length < 10)) {\n                  _context2.next = 13;\n                  break;\n                }\n                timeElapsed = Date.now() - this.state.date;\n                if (!(10000 > timeElapsed > 0)) {\n                  _context2.next = 13;\n                  break;\n                }\n                _context2.next = 13;\n                return new Promise(function (r) {\n                  return setTimeout(r, 10000 - timeElapsed);\n                });\n              case 13:\n                this.setState({\n                  date: Date.now()\n                });\n              case 14:\n                if (this.state.battles.length < 10) {\n                  _context2.next = 4;\n                  break;\n                }\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function componentDidUpdate() {\n        return _componentDidUpdate.apply(this, arguments);\n      }\n      return componentDidUpdate;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var componentHeader = /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 27\n        }\n      }, \"Loading Battles...\");\n      var battlesDraw = [];\n\n      //if the battles state was set after success fully fetching from backend, it maps these battles as components into battlesDraw[]\n      if (this.state.battles.length > 0) {\n        battlesDraw = this.state.battles.map(function (b, i) {\n          return /*#__PURE__*/React.createElement(Battle, {\n            key: \"$battle-\" + i,\n            battle: b,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 9\n            }\n          });\n        });\n      }\n      if (battlesDraw.length > 0) {\n        componentHeader = /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }\n        }, \"Recently Recorded Battles\");\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.battleCollection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }\n      }, componentHeader, battlesDraw);\n    }\n  }]);\n  return BattleCollection;\n}(Component);\nexport default BattleCollection;","map":{"version":3,"names":["React","Component","useEffect","Battle","GetBattlesAsync","axios","GetPlayerBattlesAsync","styles","BattleCollection","props","state","playerTag","battles","date","Date","setState","now","fetchedBattles","length","timeElapsed","Promise","r","setTimeout","undefined","componentHeader","battlesDraw","map","b","i","battleCollection"],"sources":["C:/Users/Elodin/Documents/codexRoyale/codexroyale.com/React-Front-End/src/components/BattleCollection.js"],"sourcesContent":["import React, { Component, useEffect } from \"react\";\r\nimport Battle from \"./Battle\";\r\nimport { GetBattlesAsync } from \"../Utilities/axios-functions\";\r\nimport { axios } from \"../axios\";\r\nimport { GetPlayerBattlesAsync } from \"../Utilities/axios-functions\";\r\nimport styles from \"../cssModules/BattleCollection.module.css\";\r\n\r\nclass BattleCollection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playerTag: \"\",\r\n      battles: [],\r\n      date: new Date(),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { playerTag } = this.props;\r\n\r\n    this.setState({ date: Date.now() });\r\n\r\n    do {\r\n      //if there is a tag in the header it will search that individual player\r\n      if (playerTag) {\r\n        this.setState({ playerTag: playerTag });\r\n        //gets player's battles from backend\r\n        const fetchedBattles = await GetPlayerBattlesAsync(playerTag);\r\n\r\n        //if successfully fetched battles sets the state variable\r\n        if (fetchedBattles) this.setState({ battles: fetchedBattles });\r\n      } //if this collection is being creeated without a given tag fetches all recent battles from backend\r\n      else {\r\n        //gets recent battles from backed\r\n        const fetchedBattles = await GetBattlesAsync();\r\n        if (fetchedBattles) this.setState({ battles: fetchedBattles });\r\n      }\r\n\r\n      if (this.state.battles.length < 10) {\r\n        var timeElapsed = Date.now() - this.state.date;\r\n        if (7500 > timeElapsed > 0) {\r\n          await new Promise((r) => setTimeout(r, 7500 - timeElapsed));\r\n        }\r\n        \r\n        this.setState({ date: Date.now() });\r\n      }\r\n    } while (this.state.battles.length < 10);\r\n  }\r\n\r\n  async componentDidUpdate() {\r\n    const { playerTag } = this.props;\r\n\r\n    //if there is a tag in the header it will search that individual player\r\n    if (playerTag != this.state.playerTag && playerTag != undefined) {\r\n      this.setState({ battles: [] });\r\n      this.setState({ playerTag: playerTag });\r\n\r\n      do {  \r\n        //gets player's battles from backend\r\n        const fetchedBattles = await GetPlayerBattlesAsync(playerTag);\r\n\r\n        //if successfully fetched battles sets the state variable\r\n        this.setState({ battles: fetchedBattles });\r\n\r\n        if (this.state.battles.length < 10) {\r\n          var timeElapsed = Date.now() - this.state.date;\r\n          if (10000 > timeElapsed > 0) {\r\n            await new Promise((r) => setTimeout(r, 10000 - timeElapsed));\r\n          }\r\n        }\r\n        this.setState({ date: Date.now() });\r\n      } while (this.state.battles.length < 10);\r\n      \r\n    }\r\n\r\n    // if(timeElapsed)\r\n  }\r\n\r\n  render() {\r\n    let componentHeader = <h2>Loading Battles...</h2>;\r\n\r\n    let battlesDraw = [];\r\n\r\n    //if the battles state was set after success fully fetching from backend, it maps these battles as components into battlesDraw[]\r\n    if (this.state.battles.length > 0) {\r\n      battlesDraw = this.state.battles.map((b, i) => (\r\n        <Battle key={\"$battle-\" + i} battle={b} />\r\n      ));\r\n    }\r\n\r\n    if (battlesDraw.length > 0) {\r\n      componentHeader = <h2>Recently Recorded Battles</h2>;\r\n    }\r\n\r\n    return (\r\n      <div className={styles.battleCollection}>\r\n        {componentHeader}\r\n        {battlesDraw}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default BattleCollection;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}