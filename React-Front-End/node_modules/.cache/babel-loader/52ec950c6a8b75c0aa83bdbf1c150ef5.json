{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Elodin\\\\Documents\\\\codexRoyale\\\\codexroyale.com\\\\React-Front-End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Elodin\\\\Documents\\\\codexRoyale\\\\codexroyale.com\\\\React-Front-End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Elodin\\\\Documents\\\\codexRoyale\\\\codexroyale.com\\\\React-Front-End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Elodin\\\\Documents\\\\codexRoyale\\\\codexroyale.com\\\\React-Front-End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Elodin\\\\Documents\\\\codexRoyale\\\\codexroyale.com\\\\React-Front-End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Elodin\\\\Documents\\\\codexRoyale\\\\codexroyale.com\\\\React-Front-End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Elodin\\\\Documents\\\\codexRoyale\\\\codexroyale.com\\\\React-Front-End\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Elodin\\\\Documents\\\\codexRoyale\\\\codexroyale.com\\\\React-Front-End\\\\src\\\\components\\\\TopDecks.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { Component } from \"react\";\nimport Deck from \"../components/Deck\";\nimport { GetTopDecks } from \"../Utilities/axios-functions\";\nimport styles from \"../cssModules/TopDecks.module.css\";\nimport linkImg from \"../assets/primary-copy.png\";\nvar TopDecks = /*#__PURE__*/function (_Component) {\n  _inherits(TopDecks, _Component);\n  function TopDecks(props) {\n    var _this;\n    _classCallCheck(this, TopDecks);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TopDecks).call(this, props));\n    _this.handleClick = function (d) {\n      window.open(\"https://link.clashroyale.com/deck/en?deck=\".concat(d.Card1Id, \";\").concat(d.Card2Id, \";\").concat(d.Card3Id, \";\").concat(d.Card4Id, \";\").concat(d.Card5Id, \";\").concat(d.Card6Id, \";\").concat(d.Card7Id, \";\").concat(d.Card8Id));\n    };\n    _this.state = {\n      playerTag: \"\",\n      topDecks: [],\n      date: new Date()\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  _createClass(TopDecks, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var playerTag, decks, timeElapsed;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                playerTag = this.props.playerTag;\n                this.setState({\n                  playerTag: playerTag\n                });\n              case 2:\n                _context.next = 4;\n                return GetTopDecks(playerTag);\n              case 4:\n                decks = _context.sent;\n                //if successfully fetched the decks are set to the state variable\n                if (decks) this.setState({\n                  topDecks: decks\n                });\n                if (!(this.state.topDecks.length == 0)) {\n                  _context.next = 11;\n                  break;\n                }\n                timeElapsed = Date.now() - this.state.date;\n                if (!(10000 > timeElapsed > 0)) {\n                  _context.next = 11;\n                  break;\n                }\n                _context.next = 11;\n                return new Promise(function (r) {\n                  return setTimeout(r, 10000 - timeElapsed);\n                });\n              case 11:\n                this.setState({\n                  date: Date.now()\n                });\n              case 12:\n                if (this.state.topDecks.length == 0) {\n                  _context.next = 2;\n                  break;\n                }\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentDidUpdate\",\n    value: function () {\n      var _componentDidUpdate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var playerTag, decks, timeElapsed;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                playerTag = this.props.playerTag; //if there is a new tag in the header it will search that players top decks\n                if (!(playerTag != this.state.playerTag && playerTag != undefined)) {\n                  _context2.next = 15;\n                  break;\n                }\n                this.setState({\n                  topDecks: []\n                });\n                this.setState({\n                  playerTag: playerTag\n                });\n              case 4:\n                _context2.next = 6;\n                return GetTopDecks(playerTag);\n              case 6:\n                decks = _context2.sent;\n                //if successfully fetched the decks are set to the state variable\n                if (decks) this.setState({\n                  topDecks: decks\n                });\n                if (!(this.state.topDecks.length == 0)) {\n                  _context2.next = 13;\n                  break;\n                }\n                timeElapsed = Date.now() - this.state.date;\n                if (!(10000 > timeElapsed > 0)) {\n                  _context2.next = 13;\n                  break;\n                }\n                _context2.next = 13;\n                return new Promise(function (r) {\n                  return setTimeout(r, 10000 - timeElapsed);\n                });\n              case 13:\n                this.setState({\n                  date: Date.now()\n                });\n              case 14:\n                if (this.state.topDecks.length == 0) {\n                  _context2.next = 4;\n                  break;\n                }\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function componentDidUpdate() {\n        return _componentDidUpdate.apply(this, arguments);\n      }\n      return componentDidUpdate;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var topDecks = this.props.topDecks;\n      var decksDraw = [];\n      var componentHeader = \"\";\n      if (this.state.topDecks.length > 0) {\n        componentHeader = /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }\n        }, \"Best Decks\");\n        decksDraw = this.state.topDecks.map(function (d, i) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: styles.deck,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 9\n            }\n          }, /*#__PURE__*/React.createElement(Deck, {\n            key: \"$top-deck-\" + i,\n            deck: d,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 9\n            }\n          }), /*#__PURE__*/React.createElement(\"p\", {\n            className: styles.stats,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 9\n            }\n          }, /*#__PURE__*/React.createElement(\"b\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 37\n            }\n          }, \"Wins:\"), d.Wins, \" \", /*#__PURE__*/React.createElement(\"b\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 58\n            }\n          }, \"Loss:\"), d.Loss, \" \", /*#__PURE__*/React.createElement(\"b\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 79\n            }\n          }, \"Win/Loss Rate:\"), d.WinLossRate, /*#__PURE__*/React.createElement(\"img\", {\n            className: styles.link,\n            src: linkImg,\n            onClick: _this2.handleClick.bind(_this2, d),\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 9\n            }\n          })));\n        });\n      } else componentHeader = /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 28\n        }\n      }, \"Loading Best Decks...\");\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.topDecks,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 8\n        }\n      }, componentHeader, decksDraw);\n    }\n  }]);\n  return TopDecks;\n}(Component);\nexport default TopDecks;","map":{"version":3,"names":["React","Component","Deck","GetTopDecks","styles","linkImg","TopDecks","props","handleClick","d","window","open","Card1Id","Card2Id","Card3Id","Card4Id","Card5Id","Card6Id","Card7Id","Card8Id","state","playerTag","topDecks","date","Date","bind","setState","decks","length","timeElapsed","now","Promise","r","setTimeout","undefined","decksDraw","componentHeader","map","i","deck","stats","Wins","Loss","WinLossRate","link"],"sources":["C:/Users/Elodin/Documents/codexRoyale/codexroyale.com/React-Front-End/src/components/TopDecks.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport Deck from \"../components/Deck\";\r\nimport { GetTopDecks } from \"../Utilities/axios-functions\";\r\nimport styles from \"../cssModules/TopDecks.module.css\"\r\nimport linkImg from \"../assets/primary-copy.png\"\r\n\r\nclass TopDecks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playerTag: \"\",\r\n      topDecks: [],\r\n      date: new Date(),\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { playerTag } = this.props;\r\n    this.setState({playerTag:playerTag});\r\n\r\n    do {  \r\n      //gets player's best decks from backend\r\n      var decks = await GetTopDecks(playerTag);\r\n\r\n      //if successfully fetched the decks are set to the state variable\r\n      if (decks) this.setState({ topDecks: decks });\r\n\r\n      if (this.state.topDecks.length == 0 ) {\r\n        var timeElapsed = Date.now() - this.state.date;\r\n        if (10000 > timeElapsed > 0) {\r\n          await new Promise((r) => setTimeout(r, 10000 - timeElapsed));\r\n        }\r\n      }\r\n      this.setState({ date: Date.now() });\r\n    } while (this.state.topDecks.length == 0);\r\n  }\r\n  async componentDidUpdate() {\r\n    const { playerTag } = this.props;\r\n\r\n    //if there is a new tag in the header it will search that players top decks\r\n    if (playerTag != this.state.playerTag && playerTag != undefined) {\r\n      this.setState({ topDecks: [] });\r\n      this.setState({ playerTag: playerTag });\r\n\r\n      do {  \r\n        //gets player's best decks from backend\r\n        var decks = await GetTopDecks(playerTag);\r\n\r\n        //if successfully fetched the decks are set to the state variable\r\n        if (decks) this.setState({ topDecks: decks });\r\n\r\n        if (this.state.topDecks.length == 0) {\r\n          var timeElapsed = Date.now() - this.state.date;\r\n          if (10000 > timeElapsed > 0) {\r\n            await new Promise((r) => setTimeout(r, 10000 - timeElapsed));\r\n          }\r\n        }\r\n        this.setState({ date: Date.now() });\r\n      } while (this.state.topDecks.length == 0);\r\n      \r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  handleClick = (d) =>{\r\n    window.open(`https://link.clashroyale.com/deck/en?deck=${d.Card1Id};${d.Card2Id};${d.Card3Id};${d.Card4Id};${d.Card5Id};${d.Card6Id};${d.Card7Id};${d.Card8Id}`);\r\n  }\r\n   \r\n  render() {\r\n    const { topDecks } = this.props;\r\n\r\n    let decksDraw = [];\r\n    let componentHeader = \"\";\r\n\r\n    if (this.state.topDecks.length > 0) {\r\n      componentHeader = <h2>Best Decks</h2>;\r\n      decksDraw = this.state.topDecks.map((d, i) => (\r\n        <div className={styles.deck}>\r\n        <Deck key={\"$top-deck-\" + i} deck={d} />\r\n        <p className={styles.stats}><b>Wins:</b>{d.Wins} <b>Loss:</b>{d.Loss} <b>Win/Loss Rate:</b>{d.WinLossRate} \r\n        <img className={styles.link} src={linkImg} onClick={this.handleClick.bind(this,d)}/></p>\r\n        \r\n        </div>\r\n      ));\r\n    }\r\n    else componentHeader = <h2>Loading Best Decks...</h2>;\r\n\r\nreturn(<div className={styles.topDecks}>\r\n      {componentHeader}\r\n      {decksDraw}\r\n    </div>\r\n  );\r\n\r\n  }\r\n}\r\n\r\nexport default TopDecks;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}